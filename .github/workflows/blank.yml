# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

        #- name: Gradle Build
        #run: gradle build assembleDebug

      - name: Build APK
        run: ./gradlew assembleDebug

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: KotlinBasic.apk
          path: app\build\outputs\apk\debug\app-debug.apk

      - name: Distribute To Firebase App Distribution
        # You may pin to the exact commit or the version.
        # uses: nickwph/firebase-app-distribution-action@f21ab85c0d8420d13a6b94ddf3839fe2ab78c8ba
        uses: nickwph/firebase-app-distribution-action@v1.2.1
        with:
          # The release binary file to upload.
          file: app/build/outputs/apk/debug/app-debug.apk
          # Your app's Firebase App ID. You can find the App ID in the Firebase console, on the General Settings page.
          app: ${{ secrets.FIREBASE_APP_ID }}
          groups: e-channel-internal-release

      - name: Firebase App Distribution Upload
        uses: Mastersam07/firebase-app-distribution-action@v0.1
        with:
                  appId: ${{ secrets.FIREBASE_APP_ID }}
                  serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
                  groups: e-channel-internal-release
                  file: app/build/outputs/apk/debug/app-debug.apk
                  #releaseNotes: ${{ inputs.release_notes }}
